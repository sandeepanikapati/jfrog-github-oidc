
name: Pre-Container Configuration Example
on: [push]
permissions:
  contents: read
  id-token: write
jobs:
  container_job:
    runs-on: ubuntu-latest
    steps:
      - name: Get id token
        run: |
          ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=jfrog-github" | jq .value | tr -d '"')
          echo "ID_TOKEN=${ID_TOKEN}" >> $GITHUB_ENV
      - name: Exchange token with access
        env:
         ID_TOKEN: ${{env.ID_TOKEN}}
         JFROG_PLATFORM_URL: https://incloudmaster.jfrog.io
        run: |
             ACCESS_TOKEN=$(curl -XPOST -H "Content-Type: application/json" "https://incloudmaster.jfrog.io/access/api/v1/oidc/token" -d "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\": \"${ID_TOKEN}\", \"provider_name\": \"san-git-intergation\"}" | jq .access_token | tr -d '"')
                    echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2
      - name: list token
        env:
         OIDC_AUDIENCE: 'jfrog-github'
         OIDC_PROVIDER: 'san-git-intergation'
        run: |
            RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST -H "Content-type: application/json" https://incloudmaster.jfrog.io/access/api/v1/oidc/token -d \
              '{"grant_type": "urn:ietf:params:oauth:grant-type:token-exchange","subject_token_type":"urn:ietf:params:oauth:token-type:id_token","subject_token": "${{ env.ID_TOKEN }}","provider_name": "${{ env.OIDC_PROVIDER }}"}')
              echo "API Response:"
              echo "$RESPONSE" 
              
      - name: Deploy to artifactory
        env:
          ID_TOKEN: ${{ env.ACCESS_TOKEN }}
          POC_URL: ${{ secrets.JF_URL }}
        run: |
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -T README.md "${POC_URL}/artifactory/manu-generic-local/README.md"


      - name: Set up Node.js and dependencies
        run: |
          curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
          sudo apt-get install -y nodejs
          npm install

      - name: Initialize Docker container
        run: |
          docker login incloudmaster.jfrog.io -u ${{ secrets.JFROG_USER }} -p $ACCESS_TOKEN
          docker pull incloudmaster.jfrog.io/docker-remote/node:lts-alpine
          docker run -d --name my-node-container node:14
          sleep 10  # Example wait time for container to initialize

      - name: Execute commands inside the container
        run: |
          docker exec my-node-container npm install
          docker exec my-node-container npm test
